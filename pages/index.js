import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useState, useEffect, useRef } from 'react'

export default function Home() {
  const [showPhrase, setShowPhrase] = useState(true)
  const [userInput, setUserInput] = useState('')
  const [inputIndex, setInputIndex] = useState(0)
  const [charIndex, setCharIndex] = useState(0)
  const [isCorrect, setIsCorrect] = useState(true)
  const [isWrong, setIsWrong] = useState(false)
  const [isIndexMatch, setIsIndexMatch] = useState(false)
  const textInput = useRef(null)

  function stringToArray(string) {
    return [...string]
  }

  const swedishPhrase = 'den här är en svensk meningen'

  let stringIsArray = stringToArray(swedishPhrase)

  useEffect(() => {
    textInput.current.focus()
  }, [])

  useEffect(() => {
    checkMatch()
  }, [userInput])

  function handleKeyDown({ key }) {
    setUserInput(key)

    if (key === 'Backspace' && isIndexMatch) {
      setInputIndex(inputIndex - 1)
      setCharIndex(charIndex - 1)
    } else if (key === 'Meta') {
      // FIXME: This needs to be fixed, for now this is a temporary solution

      setInputIndex(0)
      setCharIndex(0)
    } else {
      setInputIndex(inputIndex + 1)
    }
  }

  // To prevent the index's to go below 0
  if (charIndex <= -1) {
    setCharIndex(0)
  }
  if (inputIndex <= -1) {
    setInputIndex(0)
  }

  function handleOnChange(e) {
    if (inputIndex === charIndex) {
      setIsIndexMatch(true)
    } else {
      setIsIndexMatch(false)
    }
  }

  function checkMatch() {
    const charToCompare = stringIsArray[charIndex]
    const doesItMatch = charToCompare === userInput

    if (doesItMatch) {
      setCharIndex(charIndex + 1)
      setIsCorrect(true)
      setIsWrong(false)
    } else {
      setIsCorrect(false)
      setIsWrong(true)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {`what you pressed: ${userInput}`}
        <br />
        {`inputIndex: ${inputIndex}`}
        <br />
        {`charIndex: ${charIndex}`}
        <br />
        {`what letter you need to press: ${stringIsArray[charIndex]}`}
        <br />
        {`isCorrect: ${isCorrect}`}
        <br />
        {`isWrong: ${isWrong}`}
        <br />
        {showPhrase && (
          <div className={styles.wrapper}>
            {stringIsArray.map((character, index) => (
              <span key={index}>{character}</span>
            ))}
          </div>
        )}
        <div className={styles.wrapper}>This is a Swedish phrase</div>
        <input
          ref={textInput}
          className={isCorrect & !isWrong ? 'blue' : 'red'}
          typeof="text"
          onKeyDown={handleKeyDown}
          onChange={handleOnChange}
        />
        <div className={styles.containerButtons}>
          <button
            onClick={(e) => {
              setShowPhrase(!showPhrase)
            }}
          >
            {showPhrase ? 'Hide Original Phrase' : 'Show Original Phrase'}
          </button>
          <button>Hint</button>
          <button>Next</button>
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}
