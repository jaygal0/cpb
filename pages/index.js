import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useState, useEffect } from 'react'
import useTypingGame from 'react-typing-game-hook'

export default function Home() {
  const swedishPhrase = 'this is a phrase'
  let stringIsArray = stringToArray(swedishPhrase)

  const [showPhrase, setShowPhrase] = useState(true)
  const [userInput, setUserInput] = useState('')
  const [char, setChar] = useState('')
  const [charIndex, setCharIndex] = useState(0)
  const [isCorrect, setIsCorrect] = useState(false)

  const {
    states: { chars, charsState },
    actions: { insertTyping, resetTyping, deleteTyping },
  } = useTypingGame(swedishPhrase)

  function stringToArray(string) {
    return [...string]
  }

  function handleKeyDown({ keyCode, key }) {
    setUserInput(key)
    checkMatch()
  }

  function checkMatch() {
    const wordToCompare = stringIsArray[charIndex]
    const doesItMatch = wordToCompare === userInput

    if (doesItMatch) {
      setCharIndex(charIndex + 1)
      setIsCorrect(true)
    } else {
      setIsCorrect(false)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {`what you can pressed:${userInput}`}
        <br />
        {`what the computer sees:${userInput}`}
        <br />
        {`the current character index:${charIndex}`}
        <br />
        {`what letter you need to press:${stringIsArray[charIndex]}`}
        <br />
        {showPhrase && (
          <div className={styles.wrapper}>
            {stringIsArray.map((character, index) => (
              <span key={index}>{character}</span>
            ))}
          </div>
        )}
        <div className={styles.wrapper}>This is a Swedish phrase</div>
        <input
          className={isCorrect ? 'blue' : 'red'}
          typeof="text"
          onChange={(e) => setChar(e.target.value)}
          onKeyDown={handleKeyDown}
          tabIndex="0"
        />
        <div className={styles.containerButtons}>
          <button
            onClick={(e) => {
              setShowPhrase(!showPhrase)
            }}
          >
            {showPhrase ? 'Hide Original Phrase' : 'Show Original Phrase'}
          </button>
          <button>Hint</button>
          <button>Next</button>
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}
